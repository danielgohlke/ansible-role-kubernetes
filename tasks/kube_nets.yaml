---
- lineinfile:
    dest: /etc/sysctl.d/k8s.conf
    regexp: '^net.bridge.bridge-nf-call-iptables'
    line: 'net.bridge.bridge-nf-call-iptables = 1'
    create: yes
  notify: sysctl-system
  when: kube_network == 'flannel' or kube_network == 'kube-router'

- block:
    - template: src=flannel-net.j2 dest=/tmp/flannel-net.yml
    - command: kubectl apply -f /tmp/flannel-net.yml creates=/etc/cni/net.d/10-flannel.conflist
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
  when: kube_network == 'flannel'

- block:
    - copy: src=calico-net.yaml dest=/tmp/calico-net.yaml
    - command: kubectl apply -f /tmp/calico-net.yaml creates=/var/etcd/calico-data
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
  when: kube_network == 'calico'

- block:
    - copy: src=kuberouter-net.yaml dest=/tmp/kuberouter-net.yaml
    - command: kubectl apply -f /tmp/kuberouter-net.yaml creates=/etc/cni/net.d/10-kuberouter.conf
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
  when: kube_network == 'kube-router'

- block:
    - copy: src=weave-net.yaml dest=/tmp/weave-net.yaml
    - command: kubectl apply -f /tmp/weave-net.yaml creates=/etc/cni/net.d/10-weave.conf
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
  when: kube_network == 'weave'

- block:
    # Helm is the installation method of Cilium
    - import_tasks: helm.yaml
      environment:
        KUBECONFIG: "{{KUBECONFIG}}"
      when: kube_install_helm | bool

    # Cert-manager is used for creating the certificates
    - name: Add cert-manager CRDs
      shell: kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.8.2/cert-manager.crds.yaml
      when: kube_install_helm | bool

    - name: Edit /etc/sysctl.d/99-override_cilium_rp_filter.conf
      lineinfile:
        dest: /etc/sysctl.d/99-override_cilium_rp_filter.conf
        regexp: '^net.ipv4.conf.lxc*.rp_filter'
        line: 'net.ipv4.conf.lxc*.rp_filter = 0'
        create: yes
      notify: sysctl-system

    # IPSec secret
    - name: Check if cilium-ipsec-keys secret exists
      command:  kubectl -n kube-system get secret cilium-ipsec-keys
      register: k_status
      ignore_errors: yes
      changed_when: false

    - name: Create cilium-ipsec-keys secret
      shell: kubectl create -n kube-system secret generic cilium-ipsec-keys  --from-literal=keys="3 rfc4106(gcm(aes)) $(echo $(dd if=/dev/urandom count=20 bs=1 2> /dev/null | xxd -p -c 64)) 128"
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      when: k_status.rc != 0

    - name: Download cilium cli
      command: curl -L --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz{,.sha256sum}

    - name: Install cilium cli
      command: tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin

    - name: Add Cilium Helm repo
      command: helm repo add cilium https://helm.cilium.io/
      environment:
        KUBECONFIG: "{{KUBECONFIG}}"

    - name: Check if Cilium is installed
      command: helm status cilium -n kube-system
      register: helm_status
      ignore_errors: yes
      changed_when: false

    - block:
      - name: Helm update
        command: helm repo update
        environment:
          KUBECONFIG: "{{KUBECONFIG}}"

      - name: Create file with Cilium values
        template: src=cilium-values-1.11.6.yaml.j2 dest=/tmp/cilium-values-1.11.6.yaml

      - name: Deploy cilium 
        command: helm install cilium cilium/cilium --version 1.11.6 --namespace kube-system -f /tmp/cilium-values-1.11.6.yaml
        environment:
          KUBECONFIG: "{{KUBECONFIG}}"
           
      when: helm_status.rc != 0

    # - name: Wait until cilium was deployed
    #   command: cilium status --wait
    #   environment:
    #     KUBECONFIG: "{{KUBECONFIG}}"

  when: kube_network == 'cilium'